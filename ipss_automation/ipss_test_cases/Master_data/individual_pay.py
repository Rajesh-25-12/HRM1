import time
import unittest
import logging
import argparse

from idlelib.multicall import r
from selenium import webdriver
from selenium.webdriver import ActionChains
from selenium.webdriver.common.keys import Keys
from ipss_automation.base import BasePage
from selenium.webdriver.common.by import By
from ipss_automation.locators import Locators
# from ipss_automation.utils import get_otp_value


class Individual_pay(BasePage):

    def __init__(self, driver):
        super().__init__(driver)


    def individual(self):
        self.click(Locators.DRAWER)
        time.sleep(2)
        self.click(Locators.MAS_DATA)
        time.sleep(2)
        self.click(Locators.INDIVIDUAL)
        time.sleep(2)
        self.click(Locators.ARROW)
        time.sleep(2)
        self.driver.switch_to.alert.accept()
        time.sleep(2)
        self.click(Locators.ROW1)
        self.click(Locators.CELL3)
        time.sleep(2)
        self.click(Locators.ARROW)
        time.sleep(2)
        self.driver.switch_to.alert.accept()
        time.sleep(2)
        self.click(Locators.ROW1)
        time.sleep(2)
        self.click(Locators.ARROW)
        time.sleep(2)
        self.click(Locators.ADD_1)
        time.sleep(2)
        self.click(Locators.PAYCODE)
        time.sleep(2)
        self.enter_text(Locators.PAYCODE, "1234")
        time.sleep(2)
        self.click(Locators.PAYDES)
        time.sleep(2)
        self.enter_text(Locators.PAYDES, "hi")
        time.sleep(2)
        self.click(Locators.PAYAMOUNT)
        time.sleep(2)
        self.enter_text(Locators.PAYAMOUNT, "1500")
        time.sleep(2)
        self.click(Locators.INCAMOUNT)
        time.sleep(2)
        self.enter_text(Locators.INCAMOUNT, "100")
        time.sleep(2)
        self.click(Locators.AMOUNT)
        time.sleep(2)
        self.enter_text(Locators.AMOUNT, "1600")
        time.sleep(2)
        self.click(Locators.NOTES)
        time.sleep(2)
        self.enter_text(Locators.NOTES, "hello")
        time.sleep(2)
        self.click(Locators.SUBMIT)
        time.sleep(2)
        self.click(Locators.ADD_1)
        time.sleep(2)
        self.click(Locators.PAYCODE)
        time.sleep(2)
        self.enter_text(Locators.PAYCODE, "1234")
        time.sleep(2)
        self.click(Locators.PAYDES)
        time.sleep(2)
        self.enter_text(Locators.PAYDES, "hi")
        time.sleep(2)
        self.click(Locators.PAYAMOUNT)
        time.sleep(2)
        self.enter_text(Locators.PAYAMOUNT, "1500")
        time.sleep(2)
        self.click(Locators.INCAMOUNT)
        time.sleep(2)
        self.enter_text(Locators.INCAMOUNT, "100")
        time.sleep(2)
        self.click(Locators.AMOUNT)
        time.sleep(2)
        self.enter_text(Locators.AMOUNT, "1600")
        time.sleep(2)
        self.click(Locators.NOTES)
        time.sleep(2)
        self.enter_text(Locators.NOTES, "hello")
        time.sleep(2)
        self.click(Locators.CANCEL1)
        time.sleep(2)
        self.click(Locators.ADD)
        time.sleep(2)
        self.click(Locators.CANCEL1)
        time.sleep(2)
        self.click(Locators.EDIT)
        time.sleep(2)
        self.driver.switch_to.alert.accept()
        self.click(Locators.ROW1)
        self.click(Locators.CELL3)
        time.sleep(2)
        self.click(Locators.EDIT)
        time.sleep(2)
        self.driver.switch_to.alert.accept()
        time.sleep(2)
        self.click(Locators.ROW1)
        self.click(Locators.EDIT)
        time.sleep(2)
        self.click(Locators.AMOUNT)
        time.sleep(2)
        self.send_keys(Locators.AMOUNT, Keys.CONTROL + "a")
        time.sleep(2)
        self.send_keys(Locators.AMOUNT, Keys.DELETE)
        time.sleep(2)
        self.enter_text(Locators.AMOUNT, "1600")
        time.sleep(2)
        self.click(Locators.SUBMIT)
        time.sleep(2)
        self.click(Locators.CELL4)
        time.sleep(2)
        self.enter_text(Locators.CELL4, "124")
        time.sleep(2)
        self.send_keys(Locators.CELL4, Keys.ENTER)
        self.click(Locators.SAVE)
        time.sleep(2)
        self.click(Locators.CELL4)
        time.sleep(2)
        self.click(Locators.DELETE)
        time.sleep(2)
        self.driver.switch_to.alert.accept()
        time.sleep(2)
        self.click(Locators.CELL4)
        time.sleep(2)
        self.click(Locators.DELETE)
        time.sleep(2)
        self.driver.switch_to.alert.accept()
        time.sleep(2)
        self.click(Locators.DOWNLOAD)
        time.sleep(2)
        self.driver.back()
        time.sleep(2)
        self.click(Locators.DOWNLOAD)
        time.sleep(2)
